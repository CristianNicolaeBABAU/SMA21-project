// Generated by view binder compiler. Do not edit!
package com.example.licenta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.licenta.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditExerciseRecordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button dialogEditExerciseCancelBtn;

  @NonNull
  public final Button dialogEditExerciseEditBtn;

  @NonNull
  public final TextInputEditText dialogEditExerciseRepsEt;

  @NonNull
  public final TextInputLayout dialogEditExerciseRepsTila;

  @NonNull
  public final TextInputEditText dialogEditExerciseSetsEt;

  @NonNull
  public final TextInputLayout dialogEditExerciseSetsTila;

  @NonNull
  public final TextInputEditText dialogEditExerciseWeightEt;

  @NonNull
  public final TextInputLayout dialogEditExerciseWeightTila;

  private DialogEditExerciseRecordBinding(@NonNull LinearLayout rootView,
      @NonNull Button dialogEditExerciseCancelBtn, @NonNull Button dialogEditExerciseEditBtn,
      @NonNull TextInputEditText dialogEditExerciseRepsEt,
      @NonNull TextInputLayout dialogEditExerciseRepsTila,
      @NonNull TextInputEditText dialogEditExerciseSetsEt,
      @NonNull TextInputLayout dialogEditExerciseSetsTila,
      @NonNull TextInputEditText dialogEditExerciseWeightEt,
      @NonNull TextInputLayout dialogEditExerciseWeightTila) {
    this.rootView = rootView;
    this.dialogEditExerciseCancelBtn = dialogEditExerciseCancelBtn;
    this.dialogEditExerciseEditBtn = dialogEditExerciseEditBtn;
    this.dialogEditExerciseRepsEt = dialogEditExerciseRepsEt;
    this.dialogEditExerciseRepsTila = dialogEditExerciseRepsTila;
    this.dialogEditExerciseSetsEt = dialogEditExerciseSetsEt;
    this.dialogEditExerciseSetsTila = dialogEditExerciseSetsTila;
    this.dialogEditExerciseWeightEt = dialogEditExerciseWeightEt;
    this.dialogEditExerciseWeightTila = dialogEditExerciseWeightTila;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditExerciseRecordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditExerciseRecordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_exercise_record, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditExerciseRecordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_edit_exercise_cancel_btn;
      Button dialogEditExerciseCancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseCancelBtn == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_edit_btn;
      Button dialogEditExerciseEditBtn = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseEditBtn == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_reps_et;
      TextInputEditText dialogEditExerciseRepsEt = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseRepsEt == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_reps_tila;
      TextInputLayout dialogEditExerciseRepsTila = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseRepsTila == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_sets_et;
      TextInputEditText dialogEditExerciseSetsEt = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseSetsEt == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_sets_tila;
      TextInputLayout dialogEditExerciseSetsTila = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseSetsTila == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_weight_et;
      TextInputEditText dialogEditExerciseWeightEt = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseWeightEt == null) {
        break missingId;
      }

      id = R.id.dialog_edit_exercise_weight_tila;
      TextInputLayout dialogEditExerciseWeightTila = ViewBindings.findChildViewById(rootView, id);
      if (dialogEditExerciseWeightTila == null) {
        break missingId;
      }

      return new DialogEditExerciseRecordBinding((LinearLayout) rootView,
          dialogEditExerciseCancelBtn, dialogEditExerciseEditBtn, dialogEditExerciseRepsEt,
          dialogEditExerciseRepsTila, dialogEditExerciseSetsEt, dialogEditExerciseSetsTila,
          dialogEditExerciseWeightEt, dialogEditExerciseWeightTila);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
