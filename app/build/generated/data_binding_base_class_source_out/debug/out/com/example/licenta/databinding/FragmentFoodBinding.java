// Generated by view binder compiler. Do not edit!
package com.example.licenta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.licenta.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button fragmentDiaryFoodAddFoodBtn;

  @NonNull
  public final CircularProgressIndicator fragmentDiaryFoodCaloriesRemainingPb;

  @NonNull
  public final TextView fragmentDiaryFoodCaloriesRemainingTv;

  @NonNull
  public final TextView fragmentDiaryFoodCarbsRemainingTv;

  @NonNull
  public final TextView fragmentDiaryFoodFatRemainingTv;

  @NonNull
  public final LinearLayout fragmentDiaryFoodMacrosLl;

  @NonNull
  public final LinearProgressIndicator fragmentDiaryFoodProgressBarCarbs;

  @NonNull
  public final LinearProgressIndicator fragmentDiaryFoodProgressBarFat;

  @NonNull
  public final LinearProgressIndicator fragmentDiaryFoodProgressBarProtein;

  @NonNull
  public final TextView fragmentDiaryFoodProteinRemainingTv;

  @NonNull
  public final RecyclerView fragmentDiaryFoodRv;

  private FragmentFoodBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button fragmentDiaryFoodAddFoodBtn,
      @NonNull CircularProgressIndicator fragmentDiaryFoodCaloriesRemainingPb,
      @NonNull TextView fragmentDiaryFoodCaloriesRemainingTv,
      @NonNull TextView fragmentDiaryFoodCarbsRemainingTv,
      @NonNull TextView fragmentDiaryFoodFatRemainingTv,
      @NonNull LinearLayout fragmentDiaryFoodMacrosLl,
      @NonNull LinearProgressIndicator fragmentDiaryFoodProgressBarCarbs,
      @NonNull LinearProgressIndicator fragmentDiaryFoodProgressBarFat,
      @NonNull LinearProgressIndicator fragmentDiaryFoodProgressBarProtein,
      @NonNull TextView fragmentDiaryFoodProteinRemainingTv,
      @NonNull RecyclerView fragmentDiaryFoodRv) {
    this.rootView = rootView;
    this.fragmentDiaryFoodAddFoodBtn = fragmentDiaryFoodAddFoodBtn;
    this.fragmentDiaryFoodCaloriesRemainingPb = fragmentDiaryFoodCaloriesRemainingPb;
    this.fragmentDiaryFoodCaloriesRemainingTv = fragmentDiaryFoodCaloriesRemainingTv;
    this.fragmentDiaryFoodCarbsRemainingTv = fragmentDiaryFoodCarbsRemainingTv;
    this.fragmentDiaryFoodFatRemainingTv = fragmentDiaryFoodFatRemainingTv;
    this.fragmentDiaryFoodMacrosLl = fragmentDiaryFoodMacrosLl;
    this.fragmentDiaryFoodProgressBarCarbs = fragmentDiaryFoodProgressBarCarbs;
    this.fragmentDiaryFoodProgressBarFat = fragmentDiaryFoodProgressBarFat;
    this.fragmentDiaryFoodProgressBarProtein = fragmentDiaryFoodProgressBarProtein;
    this.fragmentDiaryFoodProteinRemainingTv = fragmentDiaryFoodProteinRemainingTv;
    this.fragmentDiaryFoodRv = fragmentDiaryFoodRv;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_diary_food_add_food_btn;
      Button fragmentDiaryFoodAddFoodBtn = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodAddFoodBtn == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_calories_remaining_pb;
      CircularProgressIndicator fragmentDiaryFoodCaloriesRemainingPb = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodCaloriesRemainingPb == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_calories_remaining_tv;
      TextView fragmentDiaryFoodCaloriesRemainingTv = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodCaloriesRemainingTv == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_carbs_remaining_tv;
      TextView fragmentDiaryFoodCarbsRemainingTv = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodCarbsRemainingTv == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_fat_remaining_tv;
      TextView fragmentDiaryFoodFatRemainingTv = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodFatRemainingTv == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_macros_ll;
      LinearLayout fragmentDiaryFoodMacrosLl = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodMacrosLl == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_progress_bar_carbs;
      LinearProgressIndicator fragmentDiaryFoodProgressBarCarbs = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodProgressBarCarbs == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_progress_bar_fat;
      LinearProgressIndicator fragmentDiaryFoodProgressBarFat = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodProgressBarFat == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_progress_bar_protein;
      LinearProgressIndicator fragmentDiaryFoodProgressBarProtein = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodProgressBarProtein == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_protein_remaining_tv;
      TextView fragmentDiaryFoodProteinRemainingTv = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodProteinRemainingTv == null) {
        break missingId;
      }

      id = R.id.fragment_diary_food_rv;
      RecyclerView fragmentDiaryFoodRv = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDiaryFoodRv == null) {
        break missingId;
      }

      return new FragmentFoodBinding((CoordinatorLayout) rootView, fragmentDiaryFoodAddFoodBtn,
          fragmentDiaryFoodCaloriesRemainingPb, fragmentDiaryFoodCaloriesRemainingTv,
          fragmentDiaryFoodCarbsRemainingTv, fragmentDiaryFoodFatRemainingTv,
          fragmentDiaryFoodMacrosLl, fragmentDiaryFoodProgressBarCarbs,
          fragmentDiaryFoodProgressBarFat, fragmentDiaryFoodProgressBarProtein,
          fragmentDiaryFoodProteinRemainingTv, fragmentDiaryFoodRv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
