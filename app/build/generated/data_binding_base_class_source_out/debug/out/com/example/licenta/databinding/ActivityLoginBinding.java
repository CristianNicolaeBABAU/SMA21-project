// Generated by view binder compiler. Do not edit!
package com.example.licenta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.licenta.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout activityLoginCheckingCredentialsLayout;

  @NonNull
  public final TextInputEditText activityLoginEmailEt;

  @NonNull
  public final TextInputLayout activityLoginEmailLayout;

  @NonNull
  public final ProgressBar activityLoginLoadingPb;

  @NonNull
  public final Button activityLoginLoginBtn;

  @NonNull
  public final LinearLayout activityLoginParentLinearLayout;

  @NonNull
  public final TextInputEditText activityLoginPasswordEt;

  @NonNull
  public final TextInputLayout activityLoginPasswordLayout;

  @NonNull
  public final Button activityLoginSignUpBtn;

  private ActivityLoginBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout activityLoginCheckingCredentialsLayout,
      @NonNull TextInputEditText activityLoginEmailEt,
      @NonNull TextInputLayout activityLoginEmailLayout,
      @NonNull ProgressBar activityLoginLoadingPb, @NonNull Button activityLoginLoginBtn,
      @NonNull LinearLayout activityLoginParentLinearLayout,
      @NonNull TextInputEditText activityLoginPasswordEt,
      @NonNull TextInputLayout activityLoginPasswordLayout,
      @NonNull Button activityLoginSignUpBtn) {
    this.rootView = rootView;
    this.activityLoginCheckingCredentialsLayout = activityLoginCheckingCredentialsLayout;
    this.activityLoginEmailEt = activityLoginEmailEt;
    this.activityLoginEmailLayout = activityLoginEmailLayout;
    this.activityLoginLoadingPb = activityLoginLoadingPb;
    this.activityLoginLoginBtn = activityLoginLoginBtn;
    this.activityLoginParentLinearLayout = activityLoginParentLinearLayout;
    this.activityLoginPasswordEt = activityLoginPasswordEt;
    this.activityLoginPasswordLayout = activityLoginPasswordLayout;
    this.activityLoginSignUpBtn = activityLoginSignUpBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_login_checking_credentials_layout;
      LinearLayout activityLoginCheckingCredentialsLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginCheckingCredentialsLayout == null) {
        break missingId;
      }

      id = R.id.activity_login_email_et;
      TextInputEditText activityLoginEmailEt = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginEmailEt == null) {
        break missingId;
      }

      id = R.id.activity_login_email_layout;
      TextInputLayout activityLoginEmailLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginEmailLayout == null) {
        break missingId;
      }

      id = R.id.activity_login_loading_pb;
      ProgressBar activityLoginLoadingPb = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginLoadingPb == null) {
        break missingId;
      }

      id = R.id.activity_login_login_btn;
      Button activityLoginLoginBtn = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginLoginBtn == null) {
        break missingId;
      }

      LinearLayout activityLoginParentLinearLayout = (LinearLayout) rootView;

      id = R.id.activity_login_password_et;
      TextInputEditText activityLoginPasswordEt = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginPasswordEt == null) {
        break missingId;
      }

      id = R.id.activity_login_password_layout;
      TextInputLayout activityLoginPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginPasswordLayout == null) {
        break missingId;
      }

      id = R.id.activity_login_sign_up_btn;
      Button activityLoginSignUpBtn = ViewBindings.findChildViewById(rootView, id);
      if (activityLoginSignUpBtn == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView,
          activityLoginCheckingCredentialsLayout, activityLoginEmailEt, activityLoginEmailLayout,
          activityLoginLoadingPb, activityLoginLoginBtn, activityLoginParentLinearLayout,
          activityLoginPasswordEt, activityLoginPasswordLayout, activityLoginSignUpBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
